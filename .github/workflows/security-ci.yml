name: Security CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # -------------------------------
  # 1. SAST - Static Code Analysis
  # -------------------------------
  sast:
    name: SAST - Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/ci"

      - name: Upload Semgrep Report
        uses: actions/upload-artifact@v4
        with:
          name: sast-report
          path: semgrep-results.sarif

  # -------------------------------
  # 2. SCA - Dependency Analysis
  # -------------------------------
  sca:
    name: SCA - Dependency Check
    runs-on: ubuntu-latest
    needs: sast
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "Security-CI"
          path: "."
          format: "HTML"
          out: "reports"

      - name: Upload Dependency Report
        uses: actions/upload-artifact@v4
        with:
          name: sca-report
          path: reports

  # -------------------------------
  # 3. DAST - Dynamic Application Security Test
  # -------------------------------
  dast:
    name: DAST - OWASP ZAP Scan
    runs-on: ubuntu-latest
    needs: sca
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start application (staging)
        run: |
          docker compose up -d
          sleep 10

      - name: Run OWASP ZAP baseline scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: "http://localhost:8080"
          cmd_options: "-a"

      - name: Upload DAST Report
        uses: actions/upload-artifact@v4
        with:
          name: dast-report
          path: zap_report.html

  # -------------------------------
  # 4. Integration & Monitoring
  # -------------------------------
  integrate:
    name: Integrate and Monitor
    runs-on: ubuntu-latest
    needs: dast
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          path: reports

      - name: Combine and Analyze Reports
        run: |
          echo "Consolidating all security reports..."
          mkdir -p summary
          cp reports/*/* summary/ || true
          echo "Reports consolidated successfully!"

      - name: Security Dashboard Summary
        run: |
          echo "---- SECURITY DASHBOARD ----"
          echo "‚úÖ SAST, SCA e DAST executados com sucesso"
          echo "üìä Relat√≥rios dispon√≠veis nos artefatos"
          echo "‚ö†Ô∏è Se vulnerabilidades cr√≠ticas foram encontradas, bloqueie o deploy"
          echo "------------------------------"

      - name: Upload Final Summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: summary/
